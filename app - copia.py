# =========================
# üìã Asistencia ‚Äì P√∫blico (SQLite)
# =========================
import streamlit as st
import pandas as pd
from datetime import date
import sqlite3
from pathlib import Path

st.set_page_config(page_title="Asistencia - P√∫blico", layout="wide")
st.markdown("## üìã Lista de asistencia ‚Äì Seguimiento de l√≠neas de acci√≥n (P√∫blico)")

# ---------- DB (SQLite) ----------
DB_PATH = st.secrets.get("db", {}).get("db_path", "asistencia.db")

def get_conn():
    Path(DB_PATH).parent.mkdir(parents=True, exist_ok=True)
    return sqlite3.connect(DB_PATH, check_same_thread=False, timeout=30)

def init_db():
    with get_conn() as conn:
        conn.execute("PRAGMA journal_mode=WAL;")
        conn.execute("PRAGMA synchronous=NORMAL;")
        conn.execute("""
        CREATE TABLE IF NOT EXISTS asistencia(
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            created_at TEXT NOT NULL DEFAULT (datetime('now','localtime')),
            nombre TEXT, cedula TEXT, institucion TEXT,
            cargo TEXT, telefono TEXT,
            genero TEXT, sexo TEXT, edad TEXT
        );
        """)

def insert_row(row):
    with get_conn() as conn:
        conn.execute("""INSERT INTO asistencia
            (nombre, cedula, institucion, cargo, telefono, genero, sexo, edad)
            VALUES (?,?,?,?,?,?,?,?)""",
            (row["Nombre"], row["C√©dula de Identidad"], row["Instituci√≥n"],
             row["Cargo"], row["Tel√©fono"], row["G√©nero"], row["Sexo"], row["Rango de Edad"])
        )

def fetch_all_df():
    with get_conn() as conn:
        df = pd.read_sql_query("""
            SELECT id,
                   nombre  AS 'Nombre',
                   cedula  AS 'C√©dula de Identidad',
                   institucion AS 'Instituci√≥n',
                   cargo   AS 'Cargo',
                   telefono AS 'Tel√©fono',
                   genero  AS 'G√©nero',
                   sexo    AS 'Sexo',
                   edad    AS 'Rango de Edad'
            FROM asistencia
            ORDER BY id ASC
        """, conn)
    if not df.empty:
        df.insert(0, "N¬∫", range(1, len(df)+1))
    else:
        df = pd.DataFrame(columns=["N¬∫","Nombre","C√©dula de Identidad","Instituci√≥n","Cargo","Tel√©fono","G√©nero","Sexo","Rango de Edad"])
    return df

init_db()

# ---------- Formulario (agregar) ----------
with st.form("form_asistencia_publico", clear_on_submit=True):
    c1, c2, c3 = st.columns([1.2, 1, 1])
    nombre      = c1.text_input("Nombre")
    cedula      = c2.text_input("C√©dula de Identidad")
    institucion = c3.text_input("Instituci√≥n")

    c4, c5 = st.columns([1, 1])
    cargo    = c4.text_input("Cargo")
    telefono = c5.text_input("Tel√©fono")

    st.markdown("#### ")
    gcol, scol, ecol = st.columns([1.1, 1.5, 1.5])
    genero = gcol.radio("G√©nero", ["F", "M", "LGBTIQ+"], horizontal=True)
    sexo   = scol.radio("Sexo (Hombre, Mujer o Intersex)", ["H", "M", "I"], horizontal=True)
    edad   = ecol.radio("Rango de Edad", ["18 a 35 a√±os", "36 a 64 a√±os", "65 a√±os o m√°s"], horizontal=True)

    submitted = st.form_submit_button("‚ûï Agregar", use_container_width=True)
    if submitted:
        if not nombre.strip():
            st.warning("Ingresa al menos el nombre.")
        else:
            fila = {
                "Nombre": nombre.strip(),
                "C√©dula de Identidad": cedula.strip(),
                "Instituci√≥n": institucion.strip(),
                "Cargo": cargo.strip(),
                "Tel√©fono": telefono.strip(),
                "G√©nero": genero,
                "Sexo": sexo,
                "Rango de Edad": edad
            }
            insert_row(fila)
            st.success("Registro guardado.")

# ---------- Vista (solo lectura) ----------
st.markdown("### üì• Registros recibidos")
df_all = fetch_all_df()
if not df_all.empty:
    st.dataframe(
        df_all[["N¬∫","Nombre","C√©dula de Identidad","Instituci√≥n","Cargo","Tel√©fono","G√©nero","Sexo","Rango de Edad"]],
        use_container_width=True, hide_index=True
    )
else:
    st.info("A√∫n no hay registros guardados.")







